[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agent-interrogator"
version = "0.1.1"
description = "An AI agent interrogation framework for identifying attack surface."
readme = "README.md"
requires-python = ">=3.9"
license = "Apache-2.0"
authors = [{name = "Michael Samson"}]
maintainers = [{name = "Michael Samson"}]
keywords = ["ai", "agent", "security", "testing", "interrogation", "llm", "prompt-injection", "vulnerability-assessment"]
urls = {Homepage = "https://github.com/qwordsmith/agent-interrogator", Issues = "https://github.com/qwordsmith/agent-interrogator/issues", Documentation = "https://github.com/qwordsmith/agent-interrogator#readme"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Software Development :: Testing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
]
dependencies = [
    "pydantic>=2.0.0",
    "openai>=1.0.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "aiohttp>=3.8.0",
    "huggingface_hub>=0.15.0",
    "rich>=13.0.0",
    "mcp>=1.0.0",
    "ollama>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "types-PyYAML>=6.0.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=agent_interrogator --cov-report=xml --cov-report=html --cov-report=term-missing"
